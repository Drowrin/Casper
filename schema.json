{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "ArmorData": {
            "additionalProperties": false,
            "properties": {
                "ac": {
                    "description": "The AC of this armor.\nFor example, \"+2\" or \"13 + Dex Modifier (max 2)\"",
                    "type": ["string", "number"]
                }
            },
            "type": "object"
        },
        "CategoryData": {
            "additionalProperties": false,
            "type": "object"
        },
        "ItemData": {
            "additionalProperties": false,
            "properties": {
                "bundle": {
                    "default": 1,
                    "description": "Default bundle for things like arrows.\nCost/weight of an individual item is <recorded number> / <bundle>",
                    "type": "number"
                },
                "cost": {
                    "$ref": "#/definitions/ValueData",
                    "description": "Value of this item. Optional for priceless items or items of negligible worth."
                },
                "weight": {
                    "description": "Weight of this item in lb.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PropertyData": {
            "additionalProperties": false,
            "properties": {
                "args": {
                    "description": "Names of args that a property requires. For example, Range requires `normal` and `max` args.\nArgs are replaced in `description` and `display` wherever `<arg>` appears.\nFor example, Range.display is \"Range(<normal>/<max>)\"",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "categories": {
                    "description": "Describes a list of categories this property could apply to.\nFor example, Range is only valid for the Weapon category.\nThe rules for this are the same as for the root `categories` list. \"category$\" is prepended automatically.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Describes the property. This is different from the root description because args are replaced in it.",
                    "type": "string"
                },
                "display": {
                    "description": "Optional display string.\nIf it is undefined, it defaults to the root name. This is useful for unchanging properties like \"Heavy\".\nIf it is defined, args are replaced in it before being displayed.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PropertyRef": {
            "additionalProperties": {},
            "properties": {
                "ref": {
                    "description": "Refers to a proprty by id.\nLike categories, \"property$\" is added automatically.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ToolActivityData": {
            "additionalProperties": false,
            "properties": {
                "dc": {
                    "description": "An exmaple dc required for success. Format is \"dc (Attribute)\". For example \"15 (Intelligence)\"",
                    "type": "string"
                },
                "description": {
                    "description": "Describes the task being attempted",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ToolData": {
            "additionalProperties": false,
            "properties": {
                "activities": {
                    "description": "Examples of simple tasks this tool can do with a skill check.",
                    "items": {
                        "$ref": "#/definitions/ToolActivityData"
                    },
                    "type": "array"
                },
                "proficiency": {
                    "description": "A brief overview of what proficiency in this tool grants a character.",
                    "type": "string"
                },
                "skills": {
                    "description": "A list of skills and how they are affected by this tool proficiency.",
                    "items": {
                        "$ref": "#/definitions/ToolSkillData"
                    },
                    "type": "array"
                },
                "supplies": {
                    "description": "Supplies that this tool miught use in its work.",
                    "items": {},
                    "type": "array"
                },
                "uses": {
                    "description": "Tasks that are more complex than activities and generally have more defined rules.",
                    "items": {
                        "$ref": "#/definitions/ToolUseData"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ToolSkillData": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "description": "Explains how this tool proficiency can effect the named skills.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies one or more comma-separated skills.\nFor example \"Arcana\" or \"Arcana, Religion, Investigation\".",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ToolUseData": {
            "additionalProperties": false,
            "properties": {
                "description": {
                    "description": "Describes the task being performed, what materials and rolls it might require, and the possible results.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the task.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ValueData": {
            "additionalProperties": false,
            "properties": {
                "cp": {
                    "description": "Copper pieces",
                    "minimum": 1,
                    "type": "integer"
                },
                "ep": {
                    "description": "Electrum pieces",
                    "minimum": 1,
                    "type": "integer"
                },
                "gp": {
                    "description": "Gold pieces",
                    "minimum": 1,
                    "type": "number"
                },
                "pp": {
                    "description": "Platinum pieces",
                    "minimum": 1,
                    "type": "integer"
                },
                "sp": {
                    "description": "Silver pieces",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "VehicleData": {
            "additionalProperties": false,
            "properties": {
                "capacity": {
                    "type": "string"
                },
                "speed": {
                    "type": "string"
                },
                "workers": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WeaponData": {
            "additionalProperties": false,
            "properties": {
                "damage": {
                    "description": "How much damage the weapon does.\nThis should be dice or a flat amount.\nOptional -- useful for weapons like the Net.",
                    "type": ["string", "number"]
                },
                "type": {
                    "description": "Damage type the weapon does. For example \"Bludgeoning\".\nOptional -- useful for weapons like the Net.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "properties": {
        "armor": {
            "$ref": "#/definitions/ArmorData",
            "description": "If an entity is armor, it should include this component."
        },
        "categories": {
            "description": "Every entity should have at least one category, such as \"weapon\".\nCategories are also defined by entities, with the id convention \"category$<category-name>\"\".\nStrings in this list should refer to categories by id. The \"category$\" prefix is automatically added.\nExample:\ncategory:\n  - martial\n  - ranged",
            "items": {
                "type": "string"
            },
            "minItems": 1,
            "type": "array"
        },
        "category": {
            "$ref": "#/definitions/CategoryData",
            "description": "If this entity defines a category, this should be `true`. Otherwise ignore."
        },
        "description": {
            "description": "Description is optional.\nShould give a brief overview of an entity, just a few sentences.",
            "type": "string"
        },
        "id": {
            "description": "Every entity needs an id. This needs to be unique.\nConvention is namespaced ids, separated by $. For example, \"tool$smithing\".",
            "pattern": "^\\w+(\\$\\w+)+$",
            "type": "string"
        },
        "item": {
            "$ref": "#/definitions/ItemData",
            "description": "Any entity that is a physical item with at least cost and weight should have this component.\nThis should be present on all items, even if all optional fields are skipped."
        },
        "name": {
            "description": "Every entity needs a name. This does not have to be unique, just descriptive.",
            "type": "string"
        },
        "properties": {
            "description": "A list of references to properties that this object has.",
            "items": {
                "$ref": "#/definitions/PropertyRef"
            },
            "type": "array"
        },
        "property": {
            "$ref": "#/definitions/PropertyData",
            "description": "A property defines special rules for using equipment.\nIf this entity defines a property that other entities will refer to, it should contain this `property` component."
        },
        "tool": {
            "$ref": "#/definitions/ToolData",
            "description": "The tool component is applied to non-combat equipment that requires proficiency in order to perform special tasks.\nFor example: tools, vehicles, and instruments."
        },
        "vehicle": {
            "$ref": "#/definitions/VehicleData",
            "description": "If an entity is a vehicle, it should include this component."
        },
        "weapon": {
            "$ref": "#/definitions/WeaponData",
            "description": "If an entity is a weapon, it should include this component."
        }
    },
    "type": "object"
}
